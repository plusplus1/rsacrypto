// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commonLib/rpcLib/rpc.proto

package rpcLib

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsaRequest struct {
	SeqNo                int32    `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Key                  []byte   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsaRequest) Reset()         { *m = RsaRequest{} }
func (m *RsaRequest) String() string { return proto.CompactTextString(m) }
func (*RsaRequest) ProtoMessage()    {}
func (*RsaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb26a689d269c51b, []int{0}
}

func (m *RsaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsaRequest.Unmarshal(m, b)
}
func (m *RsaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsaRequest.Marshal(b, m, deterministic)
}
func (m *RsaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsaRequest.Merge(m, src)
}
func (m *RsaRequest) XXX_Size() int {
	return xxx_messageInfo_RsaRequest.Size(m)
}
func (m *RsaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RsaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RsaRequest proto.InternalMessageInfo

func (m *RsaRequest) GetSeqNo() int32 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *RsaRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *RsaRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type RsaResponse struct {
	SeqNo                int32    `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsaResponse) Reset()         { *m = RsaResponse{} }
func (m *RsaResponse) String() string { return proto.CompactTextString(m) }
func (*RsaResponse) ProtoMessage()    {}
func (*RsaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb26a689d269c51b, []int{1}
}

func (m *RsaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsaResponse.Unmarshal(m, b)
}
func (m *RsaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsaResponse.Marshal(b, m, deterministic)
}
func (m *RsaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsaResponse.Merge(m, src)
}
func (m *RsaResponse) XXX_Size() int {
	return xxx_messageInfo_RsaResponse.Size(m)
}
func (m *RsaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RsaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RsaResponse proto.InternalMessageInfo

func (m *RsaResponse) GetSeqNo() int32 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *RsaResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RsaResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RsaResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HbRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbRequest) Reset()         { *m = HbRequest{} }
func (m *HbRequest) String() string { return proto.CompactTextString(m) }
func (*HbRequest) ProtoMessage()    {}
func (*HbRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb26a689d269c51b, []int{2}
}

func (m *HbRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbRequest.Unmarshal(m, b)
}
func (m *HbRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbRequest.Marshal(b, m, deterministic)
}
func (m *HbRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbRequest.Merge(m, src)
}
func (m *HbRequest) XXX_Size() int {
	return xxx_messageInfo_HbRequest.Size(m)
}
func (m *HbRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HbRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HbRequest proto.InternalMessageInfo

type HbResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbResponse) Reset()         { *m = HbResponse{} }
func (m *HbResponse) String() string { return proto.CompactTextString(m) }
func (*HbResponse) ProtoMessage()    {}
func (*HbResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb26a689d269c51b, []int{3}
}

func (m *HbResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbResponse.Unmarshal(m, b)
}
func (m *HbResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbResponse.Marshal(b, m, deterministic)
}
func (m *HbResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbResponse.Merge(m, src)
}
func (m *HbResponse) XXX_Size() int {
	return xxx_messageInfo_HbResponse.Size(m)
}
func (m *HbResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HbResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HbResponse proto.InternalMessageInfo

func (m *HbResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RsaRequest)(nil), "rpcLib.rsa_request")
	proto.RegisterType((*RsaResponse)(nil), "rpcLib.rsa_response")
	proto.RegisterType((*HbRequest)(nil), "rpcLib.hb_request")
	proto.RegisterType((*HbResponse)(nil), "rpcLib.hb_response")
}

func init() { proto.RegisterFile("commonLib/rpcLib/rpc.proto", fileDescriptor_bb26a689d269c51b) }

var fileDescriptor_bb26a689d269c51b = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xc1, 0x4e, 0x84, 0x30,
	0x14, 0x45, 0xad, 0x03, 0x24, 0xbe, 0x61, 0x61, 0x3a, 0x9a, 0x10, 0x36, 0x4e, 0xba, 0x9a, 0x15,
	0x46, 0x5d, 0xf9, 0x0b, 0xc6, 0xb8, 0xe0, 0x07, 0x08, 0xb4, 0x2f, 0x23, 0x31, 0xf4, 0x95, 0x16,
	0x4d, 0xf8, 0x31, 0xbf, 0xcf, 0xb4, 0x05, 0x75, 0x36, 0x2e, 0x5c, 0x71, 0xb9, 0xed, 0x3d, 0xaf,
	0xb7, 0x85, 0x52, 0xd2, 0x30, 0x90, 0x7e, 0xee, 0xbb, 0x5b, 0x6b, 0xe4, 0xf2, 0xa9, 0x8c, 0xa5,
	0x89, 0x78, 0x16, 0x1d, 0xf1, 0x04, 0x5b, 0xeb, 0xda, 0xc6, 0xe2, 0xf8, 0x8e, 0x6e, 0xe2, 0xd7,
	0x90, 0x39, 0x1c, 0x1b, 0x4d, 0x05, 0xdb, 0xb3, 0x43, 0x5a, 0xa7, 0x0e, 0xc7, 0x17, 0xe2, 0x1c,
	0x92, 0x8e, 0xd4, 0x5c, 0x9c, 0xef, 0xd9, 0x21, 0xaf, 0x83, 0xe6, 0x97, 0xb0, 0x79, 0xc3, 0xb9,
	0xd8, 0x04, 0xcb, 0x4b, 0xd1, 0x40, 0x1e, 0x59, 0xce, 0x90, 0x76, 0xf8, 0x07, 0x4c, 0x92, 0xc2,
	0x00, 0x4b, 0xeb, 0xa0, 0x3d, 0x6c, 0x70, 0xc7, 0x00, 0xbb, 0xa8, 0xbd, 0xf4, 0xbb, 0x54, 0x3b,
	0xb5, 0x45, 0x12, 0x47, 0x7a, 0x2d, 0x72, 0x80, 0xd7, 0x6e, 0x3d, 0xab, 0xb8, 0x81, 0x6d, 0xf8,
	0x5b, 0xa6, 0x2d, 0x08, 0xf6, 0x8d, 0xb8, 0xff, 0x64, 0xb1, 0x9c, 0x43, 0xfb, 0xd1, 0x4b, 0xe4,
	0x8f, 0x00, 0x8a, 0x1a, 0xd4, 0xd2, 0xce, 0x66, 0xe2, 0xbb, 0x2a, 0x5e, 0x41, 0xf5, 0xab, 0x7f,
	0x79, 0x75, 0x6a, 0x46, 0xb4, 0x38, 0x5b, 0xa2, 0x0a, 0xff, 0x11, 0xbd, 0x83, 0xc4, 0xf4, 0xfa,
	0xc8, 0xf9, 0xba, 0xfe, 0x53, 0xa1, 0xdc, 0x9d, 0x78, 0x6b, 0xa4, 0xcb, 0xc2, 0x1b, 0x3d, 0x7c,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x60, 0x60, 0x15, 0xf7, 0xc1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RsaServiceClient is the client API for RsaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RsaServiceClient interface {
	// rsa加密
	DoEncrypt(ctx context.Context, in *RsaRequest, opts ...grpc.CallOption) (*RsaResponse, error)
	// rsa解密
	DoDecrypt(ctx context.Context, in *RsaRequest, opts ...grpc.CallOption) (*RsaResponse, error)
	// 心跳检测服务
	Ping(ctx context.Context, in *HbRequest, opts ...grpc.CallOption) (*HbResponse, error)
}

type rsaServiceClient struct {
	cc *grpc.ClientConn
}

func NewRsaServiceClient(cc *grpc.ClientConn) RsaServiceClient {
	return &rsaServiceClient{cc}
}

func (c *rsaServiceClient) DoEncrypt(ctx context.Context, in *RsaRequest, opts ...grpc.CallOption) (*RsaResponse, error) {
	out := new(RsaResponse)
	err := c.cc.Invoke(ctx, "/rpcLib.rsa_service/do_encrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rsaServiceClient) DoDecrypt(ctx context.Context, in *RsaRequest, opts ...grpc.CallOption) (*RsaResponse, error) {
	out := new(RsaResponse)
	err := c.cc.Invoke(ctx, "/rpcLib.rsa_service/do_decrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rsaServiceClient) Ping(ctx context.Context, in *HbRequest, opts ...grpc.CallOption) (*HbResponse, error) {
	out := new(HbResponse)
	err := c.cc.Invoke(ctx, "/rpcLib.rsa_service/ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RsaServiceServer is the server API for RsaService service.
type RsaServiceServer interface {
	// rsa加密
	DoEncrypt(context.Context, *RsaRequest) (*RsaResponse, error)
	// rsa解密
	DoDecrypt(context.Context, *RsaRequest) (*RsaResponse, error)
	// 心跳检测服务
	Ping(context.Context, *HbRequest) (*HbResponse, error)
}

func RegisterRsaServiceServer(s *grpc.Server, srv RsaServiceServer) {
	s.RegisterService(&_RsaService_serviceDesc, srv)
}

func _RsaService_DoEncrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RsaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RsaServiceServer).DoEncrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcLib.rsa_service/DoEncrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RsaServiceServer).DoEncrypt(ctx, req.(*RsaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RsaService_DoDecrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RsaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RsaServiceServer).DoDecrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcLib.rsa_service/DoDecrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RsaServiceServer).DoDecrypt(ctx, req.(*RsaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RsaService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HbRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RsaServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcLib.rsa_service/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RsaServiceServer).Ping(ctx, req.(*HbRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RsaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcLib.rsa_service",
	HandlerType: (*RsaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "do_encrypt",
			Handler:    _RsaService_DoEncrypt_Handler,
		},
		{
			MethodName: "do_decrypt",
			Handler:    _RsaService_DoDecrypt_Handler,
		},
		{
			MethodName: "ping",
			Handler:    _RsaService_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commonLib/rpcLib/rpc.proto",
}
